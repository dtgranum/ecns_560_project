setwd("C:/Users/dtgra/OneDrive/Documents/GitHub/ecns_560_project")
pacman::p_load(tidyverse, estimatr, broom, summarytools, fixest, binsreg)
library(usmap)
library(ggplot2)
library(RColorBrewer)
library(tidyverse)
library(stringr)
library(cdlTools)
library(readxl)
library(gtsummary)
library(ggeffects)
#set wd ("/ecns_560_project")
source("scripts/cleaning.R")
source("scripts/exploratory_analysis.R")
source("scripts/econometric_analysis.R")
# setwd("/ecns_560_project")
#psid cleaning
#read in data
raw_PSID <- read_excel("raw data/J325858.xlsx")
# label variables
renamed_PSID <- raw_PSID |>
rename(
"2005_release_num"=ER25001,
"2005_interview_id"=ER25002,
"2005_state_code"=ER25003,
"2005_current_state"=ER25004,
"2005_family_id"=ER25009,
"2005_religious_pref"=ER27442,
"2005_donations"=ER27451,
"2005_attendance"=ER27708,
"2005_income"=ER28037,
"2007_release_num"=ER36001,
"2007_interview_id"=ER36002,
"2007_state_code"=ER36003,
"2007_current_state"=ER36004,
"2007_family_id"=ER36009,
"2007_religious_pref"=ER40614,
"2007_donations"=ER40622,
"2007_income"=ER41027,
"2009_release_num"=ER42001,
"2009_interview_id"=ER42002,
"2009_state_code"=ER42003,
"2009_current_state"=ER42004,
"2009_family_id"=ER42009,
"2009_religious_pref"=ER46592,
"2009_donations"=ER46600,
"2009_income"=ER46935,
"2011_release_num"=ER47301,
"2011_interview_id"=ER47302,
"2011_state_code"=ER47303,
"2011_current_state"=ER47304,
"2011_family_id"=ER47309,
"2011_religious_pref"=ER51953,
"2011_donations"=ER51961,
"2011_attendance"=ER52046,
"2011_income"=ER52343,
"2013_release_num"=ER53001,
"2013_interview_id"=ER53002,
"2013_state_code"=ER53003,
"2013_current_state"=ER53004,
"2013_family_id"=ER53009,
"2013_religious_pref"=ER57709,
"2013_donations"=ER57730,
"2013_income"=ER58152,
"2015_release_num"=ER60001,
"2015_interview_id"=ER60002,
"2015_state_code"=ER60003,
"2015_current_state"=ER60004,
"2015_family_id"=ER60009,
"2015_religious_pref"=ER64869,
"2015_donations"=ER64910,
"2015_income"=ER65349,
"2017_release_num"=ER66001,
"2017_interview_id"=ER66002,
"2017_state_code"=ER66003,
"2017_current_state"=ER66004,
"2017_family_id"=ER66009,
"2017_religious_pref"=ER70941,
"2017_donations"=ER71042,
"2017_attendance"=ER71064,
"2017_income"=ER71426,
"2019_release_num"=ER72001,
"2019_interview_id"=ER72002,
"2019_state_code"=ER72003,
"2019_current_state"=ER72004,
"2019_family_id"=ER72009,
"2019_religious_pref"=ER76960,
"2019_donations"=ER77064,
"2019_attendance"=ER77086,
"2019_income"=ER77448,
"2021_release_num"=ER78001,
"2021_interview_id"=ER78002,
"2021_state_code"=ER78003,
"2021_current_state"=ER78004,
"2021_family_id"=ER78009,
"2021_religious_pref"=ER81188,
"2021_donations"=ER81340,
"2021_attendance"=ER81422,
"2021_income"=ER81775
)
# make tidy
attendancePSID <- renamed_PSID |>
pivot_longer(cols=c("2005_attendance", "2011_attendance", "2017_attendance", "2019_attendance", "2021_attendance"), names_to="year", values_to="attendance") |>
pivot_longer(cols = c("2005_current_state", "2007_current_state", "2009_current_state", "2011_current_state", "2013_current_state", "2015_current_state", "2017_current_state", "2019_current_state", "2021_current_state"), names_to = "year4", values_to = "state") |>
pivot_longer(cols=c("2005_income", "2007_income", "2009_income", "2011_income", "2013_income", "2015_income", "2017_income", "2019_income", "2021_income"), names_to="year1", values_to="income") |>
select(attendance, year, state, income)
attendancePSID$year <- sub("_attendance", "", attendancePSID$year)
attendancePSID$state <- as.character(attendancePSID$state)
cleanattendancePSID <- attendancePSID |>
filter(!attendance == 98) |>
filter(!attendance == 99) |>
filter(!is.na(attendance)) |>
filter(!is.na(state)) |>
filter(!state == 99) |>
filter(!state == 0)
#medicaid cleaning
#reading in data
enrollment <- read.csv("raw data/medicaid_enrollment.csv")
# replace state names with FIPS codes
enrollment$State <- fips(enrollment$State)
# delete extraneous columns
clean_enrollment <- subset(enrollment, select = -c(Total.VIII.Group.Newly.Eligible.Enrollees:Updated.Month, Enrollment.Month, Notes))
# variable name cleaning
clean_enrollment = clean_enrollment |>
rename(
medicaid_enrollees=Total.Medicaid.Enrollees,
expanded_enrollees=Total.VIII.Group.Enrollees,
state=State,
year=Enrollment.Year
)
# make number of expanded enrollees numeric variable and make N/A values 0
clean_enrollment$expanded_enrollees <- as.numeric(gsub(",","",clean_enrollment$expanded_enrollees))
clean_enrollment$expanded_enrollees[is.na(clean_enrollment$expanded_enrollees)] <- 0
clean_enrollment$year <- as.character(clean_enrollment$year)
clean_enrollment$state <- as.character(clean_enrollment$state)
# create dummy variable indicating medicaid expansion (post)
clean_enrollment$treatpost <- ifelse(clean_enrollment$expanded_enrollees > 0 , 1, 0)
# create dummy variable indicating treatment group
clean_enrollment <- clean_enrollment |>
group_by(state) |>
mutate(treat = as.numeric(any(treatpost == 1))) |>
ungroup()
small_enrollment <- subset(clean_enrollment, select=c("state","year","treatpost"))
# filter duplicate rows
final_enrollment <- unique(small_enrollment)
final_enrollment <- final_enrollment |>
filter(!is.na(state))
attendance_merged <- left_join(cleanattendancePSID, final_enrollment, by=c("state","year"))
attendance_merged <- attendance_merged |>
group_by(state) |>
mutate(treat = as.numeric(any(treatpost == 1))) |>
ungroup()
attendance_merged$treat <- replace(attendance_merged$treat, is.na(attendance_merged$treat), 0)
attendance_merged$treatpost <- replace(attendance_merged$treatpost, is.na(attendance_merged$treatpost), 0)
# create dummy variable indicating regular services attendance
attendance_merged$reg_attend <- ifelse(attendance_merged$attendance > 5 , 1, 0)
# create histogram
ggplot(attendance_merged, aes(attendance)) +
geom_histogram(color = "#000000", fill = "#1f78b4") +
geom_vline(aes(xintercept = mean(attendance)), color = "#000000", size = 1.25) +
geom_vline(aes(xintercept = mean(attendance) + sd(attendance)), color = "#000000", size = 1, linetype = "dashed") +
geom_vline(aes(xintercept = mean(attendance) - sd(attendance)), color = "#000000", size = 1, linetype = "dashed") + labs(
title = "Histogram of Attendance of Religious Services (2005-2021)",
x = "Number of Services Attended in Past Year", y="") + theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + theme(panel.background = element_rect(colour = "black")) + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank())
# create map of attendance
mean_attend <- aggregate(attendance_merged$attendance, list(attendance_merged$state), FUN=mean)
mean_attend <- mean_attend |>
rename(
fips = Group.1,
average_attendance = x
)
mean_attend$average_attendance <- as.numeric(mean_attend$average_attendance)
plot_usmap(data=mean_attend, values="average_attendance") + scale_fill_continuous("Number of Religious Services Attended") + theme(legend.position = "right" ) + labs(title = "Average Yearly Attendance of Religious Services (2005-2021)") + theme(panel.background = element_rect(colour = "black"))
# create map of percent regularly attended
mean_reg_attend <- aggregate(attendance_merged$reg_attend, list(attendance_merged$state), FUN=mean)
mean_reg_attend <- mean_reg_attend |>
rename(
fips = Group.1,
average_reg_attendance = x
)
mean_reg_attend$average_reg_attendance <- as.numeric(mean_reg_attend$average_reg_attendance)
plot_usmap(data=mean_reg_attend, values="average_reg_attendance") + scale_fill_continuous("% Attending More than 5 Services", limits=c(0,.15), labels = scales::percent_format(accuracy = 1)) + theme(legend.position = "right" ) + labs(title = "% Regularly Attending Religious Services (2005-2021)") + theme(panel.background = element_rect(colour = "black"))
# create map of medicaid expansion
expanded_states <- attendance_merged |>
select(state, treat)
expanded_states <- unique(expanded_states)
expanded_states <- expanded_states |>
rename(
fips = state
)
expanded_states$treat <- as.character(expanded_states$treat)
expanded_states$treat <- replace(expanded_states$treat, expanded_states$treat=="1", "Expanded Medicaid")
expanded_states$treat <- replace(expanded_states$treat, expanded_states$treat=="0", "Did Not Expand Medicaid")
plot_usmap(data=expanded_states, values="treat") + scale_fill_brewer(type="div", "Expansion Status (2021)", palette= "Blues") + theme(legend.position = "right" ) + labs(title = "Medicaid Expansion")
#create event study
event_study_treat <- attendance_merged |>
mutate(year1 = as.numeric(year)) |>
mutate(time = (year1-2014)) |>
filter(treat==1) |>
group_by(time) |>
mutate(meanattendance = mean(attendance))
event_study_untreat <- attendance_merged |>
mutate(year1 = as.numeric(year)) |>
mutate(time = (year1-2014)) |>
filter(treat==0) |>
group_by(time) |>
mutate(meanattendance = mean(attendance))
legend_colors <- c("Expanded Medicaid" = "#1f78b4", "Did Not Expand Medicaid" = "#b2df8a")
ggplot() + geom_line(data=event_study_treat,aes(x=time,y=meanattendance,color="Expanded Medicaid")) + geom_line(data=event_study_untreat,aes(x=time,y=meanattendance,color="Did Not Expand Medicaid")) + labs(x="Year (Relative to 2014)", y="Average Yearly Attendance", color = "Expansion Status") + scale_color_manual(values = legend_colors) + ggtitle("Event Study") + theme_classic() + geom_vline(xintercept=0)
#attendance overtime
attendance_overtime <- attendance_merged |>
group_by(year) |>
summarize(meanattendance = mean(attendance)) |>
ungroup()
ggplot(data=attendance_overtime,aes(x=year,y=meanattendance,group=1)) + geom_line() + labs(x="Average Attendance", y="Year") + ggtitle("Average Religious Event Attendance Over Time")
#medicaid percent change
medicaid_percent_change <- read.csv("raw data/percent_change_in_enrollment.csv")
medicaid_percent_change_before <- medicaid_percent_change |>
select(Location, Pre.ACA.Average.Monthly.Enrollment, Percent.Change) |>
mutate(year=2013) |>
rename(Enrollment = Pre.ACA.Average.Monthly.Enrollment)
medicaid_percent_change_after <- medicaid_percent_change |>
select(Location, Total.Monthly.Medicaid.CHIP.Enrollment, Percent.Change) |>
mutate(year=2023) |>
rename(Enrollment = Total.Monthly.Medicaid.CHIP.Enrollment)
medicaid_percent_change_final <- rbind(medicaid_percent_change_before, medicaid_percent_change_after) |>
filter(!Location=="District of Columbia") |>
filter(!Location=="United States") |>
filter(!Location=="Connecticut") |>
filter(!Location=="Maine") |>
rename(State = Location)
medicaid_percent_change_final <- medicaid_percent_change_final |>
mutate(ln_enrollment = log(as.numeric(Enrollment)))
new_plot <- ggplot(data=medicaid_percent_change_final, aes(x=ln_enrollment,y=State)) + geom_line(aes(group=State)) + geom_point(size=2, aes(color = factor(year))) + scale_x_discrete(limits=10:17, breaks=c(11, 12, 13, 14, 15, 16, 17), labels = scales::comma_format(big.mark = ',', decimal.mark = '.')) + ggtitle("Medicaid Enrollment Before and After Expansion by State")
legend_colors <- c("2013" = "#1f78b4", "2023" = "#b2df8a")
new_plot + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + labs(x="Log(Medicaid Enrollment)", y="State", color = "Year") + scale_color_manual(values = legend_colors)
# attendance regression with all income levels
ols_attendance <- feols(attendance ~ treatpost | year + state, data = attendance_merged)
table1 <- tbl_regression(ols_attendance)
table1 <- table1 |>
modify_header(label = "**Variable**") |>
as_gt() |>
gt::tab_header(title = "Regression 1. Attendance Regression Model")
# attendance regression with restricted income levels
attendance_merged_eligible <- attendance_merged |>
filter(income < 40000)
ols_eligible <- feols(attendance ~ treatpost | year + state, data = attendance_merged_eligible)
table2 <- tbl_regression(ols_eligible)
table2 <- table2 |>
modify_header(label = "**Variable**") |>
as_gt() |>
gt::tab_header(title = "Regression 2. Low-Income Attendance Regression Model")
# regular attendance regression with all income levels
ols_reg_attendance <- feols(reg_attend ~ treatpost | year + state, data = attendance_merged)
table3 <- tbl_regression(ols_reg_attendance)
table3 <- table3 |>
modify_header(label = "**Variable**") |>
as_gt() |>
gt::tab_header(title = "Regression 3. Regular Attendance Regression Model")
View(table1)
etable(ols_attendance, ols_attendance)
etable(ols_eligible, ols_eligible)
source("~/GitHub/ecns_560_project/scripts/econometric_analysis.R", echo=TRUE)
etable(ols_reg_attendance, ols_reg_attendance)
